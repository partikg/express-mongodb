
writefileSync - to create a file
readfileSync - to read data
unlinkfileSync - to delete data
appendfileSync - to update data




add - category:

(note -
    fs.writeFileSync("demo.txt", "welcome");
to create a demo.txt file containing text welcome
)

we use get method
(request.method == 'GET')


we use try and catch method 
in try we bring the data from demo.json file in
array form into categorydata
(try {
            var categorydata = JSON.parse(fs.readFileSync("demo.json"));
        }
catch (error) {
            categorydata = [];
        })


create a separate url variable to separate the 
url for all operations 
(let separateurl = url.parse(request.url, true)
    )

create an object for the keys like name,id 
(var obj = {
            id: separateurl.query.id,
            name: separateurl.query.name,
        })

then push the data from object to categorydata 
(categorydata.push({ obj });)

then insert the categorydata data into demo.json
(fs.writeFileSync("demo.json", JSON.stringify(categorydata));) 

then in url 
http://localhost:26/add-category?name=ram&id=55
use ? then write the keys which you want to add and refresh page 
result you can see the value in demo.json 
as "obj": {"id": "55","name": "pratik"}




view-category:

copy the categorydata variable of bring data from 
(var categorydata = JSON.parse(fs.readFileSync("demo.json"));)
demo.json file into array form in categorydata 
and include categorydata variable name at last 
and pass into objects data object 
(var obj = {
    status: true,
    message: 'category found successfully',
    data: categorydata
    }
    response.end(JSON.stringify(obj));)

and see in url http://localhost:26/view-category


whole code:
(const http = require('http');
const url = require("url");
let fs = require('fs')

const server = http.createServer((request, response) => {

    // let separateurl = url.parse(request.url, true)
    // console.log(separateurl);

    let separateurl = url.parse(request.url, true)

    if (separateurl.pathname == '/' && request.method == 'GET') {
        response.end('server working fine');
    }
    else if (separateurl.pathname == '/add-category' && request.method == 'GET') {
        // let name = separateurl.query.name;
        // console.log(name);
        try {
            var categorydata = JSON.parse(fs.readFileSync("demo.json"));
            var obj = {
                id: separateurl.query.id,
                name: separateurl.query.name,
            }
            categorydata.push({ obj });
            fs.writeFileSync("demo.json", JSON.stringify(categorydata));
        }
        catch (error) {
            categorydata = [];
        }
    }
    else if (separateurl.pathname == '/view-category' && request.method == 'GET') {
        var categorydata = JSON.parse(fs.readFileSync("demo.json"));
        var obj = {
            status: true,
            message: 'category found successfully',
            data: categorydata
        }
        response.end(JSON.stringify(obj));
    }
    else if (separateurl.pathname == '/update-category' && request.method == 'PUT') {
        response.end('server not working fine');
    }
    else if (separateurl.pathname == '/delete-category' && request.method == 'DELETE') {
        response.end('server not working fine');
    }

    separateurl.pathname == '/add-category'
    fs.writeFileSync("demo.txt", "welcome")
    let read;
    read = JSON.parse(fs.readFileSync("demo.json"));
    read.push({ separateurl });
    fs.writeFileSync("demo.json", JSON.stringify(read));

});

server.listen(26, () => {
    console.log(`Server running `);
});
)


