make a file

then to make a packagejson file
open the cmd and give command
npm init -y

then make a js file with a your filename(server.js) and give output with console.log
then on cmd use 
nodemon 
 
but it gives error
as in packagejson we have index.js file
so in default index.js file is called

so change in packagejson 
"main": "index.js",
to 
"main": "server.js",
then
nodemon 

now we want to make a server and run on the 
browser and we have http package by default
in nodejs

then for making server on browser
copy the code from nodejs website at introduction to node.js 
and change it as following 
code:
const http = require('http');

const server = http.createServer((request, response) => {
    response.end('Hello World!');
});

server.listen(26, () => {
    console.log(`Server running `);
});



To have api response on browser:
make a obj like
var obj = {
        status: true,
        message: 'data found',
        data: 'hey hi hello'
    }
then display it
response.end(JSON.stringify(obj));


then we use resquest so 
make the url http://localhost:26/view-categories 
console.log(request);
which gives output in cmd

in this output things which are useful are: 
url: '/view-categories',
method: 'GET',
are used in code:
console.log(request.url);
console.log(request.method);
which gives you in cmd:
/view-categories
GET

and if we change the url to http://localhost:26/delete-categories
then it gives you in cmd:
/delete-categories
GET

so we can use condition to show add category response if add category api is called
for the first page:
if (request.url == '/' && request.method == 'GET') {
        response.end('server working fine')
    } 
saying that if url is / ie only localhost:2610
and method is GET then display server working
like that for add-category,view,update,delete


Now you can use the methods :
like in add-category condition
 else if (request.url == '/add-categories' && request.method == 'GET') {
        ...........
    } 
just change the request.method to POST to remove the add-catgory response and display 
server not working
like that we can use DELETE,PUT

whole code:
(const http = require('http');


const server = http.createServer((request, response) => {
    // response.end('Hello World!');

    // var obj = {
    //     status: true,
    //     message: 'data found',
    //     data: 'hey hi hello'
    // }
    // response.end(JSON.stringify(obj));

    // console.log(request);

    // console.log(request.url);

    // console.log(request.method);

    if (request.url == '/' && request.method == 'GET') {
        response.end('server working fine');
    } else if (request.url == '/add-category' && request.method == 'GET') {
        response.end('server working fine');
    } else if (request.url == '/add-category' && request.method == 'POST') {
        response.end('server not working fine');
    } else if (request.url == '/add-category' && request.method == 'DELETE') {
        response.end('server not working fine');
    } else if (request.url == '/add-category' && request.method == 'PUT') {
        response.end('server not working fine');
    }
});

server.listen(26, () => {
    console.log(`Server running `);
});
)




dont do it 
Thunder client:
click new request 
paste the api url like
http://localhost:26/update-categories
click send and gives 
alert server not working
bcos we used PUT method for update-categories
so change it to PUT and send
then display api response
